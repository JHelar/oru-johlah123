#include "Register.h"

MMRegister::MMRegister(){

}

void MMRegister::addMultimedia(Multimedia m){
	Mm.push_back(m);
}

void MMRegister::writeFile(){
	ofstream MyFile;
	MyFile.open("Mm.txt");
	for(int i=0;i < Mm.size();i++){
		MyFile<<Mm[i];
	}
	MyFile.close();
}

void MMRegister::readFile(){
	ifstream MyFile;
	MyFile.open("Mm.txt");
	Multimedia empty;
	Multimedia temp;
	while(!MyFile.eof()){
		temp=Multimedia();
		MyFile>>temp;
		if(temp==empty)
			break;
		Mm.push_back(temp);
	}
	MyFile.close();
	
}

bool MMRegister::Search(string phrase,string searchType,vector<Multimedia> &hits){
	for(int i=0;i<Mm.size();i++){
		if(searchType=="type"){
			if(Mm[i].getType()==phrase)
				hits.push_back(Mm[i]);
		}
		else if(searchType=="name"){
			if(Mm[i].getName()==phrase)
				hits.push_back(Mm[i]);
		}
		else if(searchType=="date"){
			if(Mm[i].getDate()==phrase)
				hits.push_back(Mm[i]);
		}
	}
	if(hits.size()>0)
		return true;
	else
		return false;
}

void MMRegister::delMedia(Multimedia del){
	int i=0;
	for(auto itr = Mm.begin(); itr != Mm.end(); itr++){
		if(Mm[i] == del){
			Mm.erase(itr);
			break;
		}
		i++;
	}
}

void MMRegister::Sort(){
	sort(Mm.begin(),Mm.end());
}